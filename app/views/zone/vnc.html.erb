<% content_for :title, "Console" %>
<% content_for :font, "https://fonts.googleapis.com/css?family=PT+Sans" %>
<% content_for :font_narrow, "https://fonts.googleapis.com/css?family=PT+Sans+Narrow" %>
<% content_for :framework, "bootstrap.css" %>
<% content_for :frameworkr, "bootstrap-responsive.css" %>
<% content_for :stylesheet, "console.css" %>
<% content_for :body, "1" %>
<% content_for :vnc, "1" %>
<% content_for :fa, "font-awesome.min.css" %>
<% content_for :faie, "font-awesome-ie7.min.css" %>
<% content_for :bss, "bootstrapSwitch.css" %>
		<div class="navbar navbar-inverse navbar-static-top">
			<div class="navbar-inner">
				<div class="container">
					<a href="#"><span class="brand">Scorpio <span id="status"></span></span></a>
					<ul class="nav pull-right">
						<li><a href="#" id="reconnect"><i class="icon-refresh icon-white"></i> Reload Console</a></li>
												<li><a href="#" id="threefingersalute"><i class="icon-warning-sign icon-white"></i> CTRL + ALT + DEL</a></li>
												<li class="dropdown">
							<a href="#" class="dropdown-toggle" data-toggle="dropdown"><i class="icon-off icon-white"></i>&nbsp;<span class="caret"></span></a>
							<ul class="dropdown-menu">
								<li><a href="#" id="vserver-start"><i class="icon-play"></i> Boot</a></li>
																<li class="divider"></li>
								<li><a href="#" id="vserver-reset"><i class="icon-refresh"></i> Reset</a></li>
								<li><a href="#" id="vserver-poweroff"><i class="icon-off"></i> Power Off</a></li>
															</ul>
						</li>
					</ul>
				</div>
			</div>
		</div>

		<canvas id="noVNC_canvas" width="640" height="20" style="cursor: default;">
			Your browser is not supported, please use Chrome.
		</canvas>

		<script src="/novnc/util.js"></script>

		<script language="javascript">

			var INCLUDE_URI = '/novnc/';

			Util.load_scripts(["webutil.js", "base64.js", "websock.js", "des.js",
								"input.js", "display.js", "jsunzip.js", "rfb.js"]);

			var rfb;

			function updateState(rfb, state, oldstate, msg) {

								switch (state) {
					case 'failed':
					case 'disconnected':
					case 'fatal':
						cssclass = 'important';
						message = 'Disconnected';
					break;
					case 'normal':
						cssclass = 'success';
						message = 'Connected';
					break;
					case 'loaded':
						cssclass = 'success';
						message = 'Connecting';
					break;
				}

				if(cssclass && message) {
					$('#status').html('<a href="#" alt="' + msg + '" title="' + msg + '" class="label label-' + cssclass + '">' + message + '</a>');
				} else {
					$('#status').html('');
				}

		}
    function resizewindow() {

      var width, height;

      height = $('.navbar').height();
      height += $('#noVNC_canvas').height();

      // this takes into consideration the location & status bars...hopefully :(

      height += window.outerHeight - window.innerHeight;

      width = $('#noVNC_canvas').width();
      width += window.outerWidth - window.innerWidth;

      // this is incase the virtual server is powered off so it doesn't snap entirely

      if(width < 640) {
        width = 640;
      }

      if(height < 480) {
        height = 480;
      }

      window.resizeTo(width, height);

    }

			window.onscriptsload = function () {
        <% hv = Zone.find_by(id: Vm.find_by(:uuid => params[:id]).hv)
				Vm.where(:uuid => params[:id]).pluck(:ws_port, :vnc_pw).reverse.map do |ws_port, vnc_pw| %>
				var host = '<%= hv.ip %>';
				var port = '<%= ws_port %>';
				var password = '<%= vnc_pw %>';
				var path = '';
        <% end %>

				rfb = new RFB({
					'target': $D('noVNC_canvas'),
					'encrypt': 'no',
					'true_color': true,
					'local_cursor': true,
					'shared': true,
					'view_only': false,
					'updateState':  updateState,
				});

				rfb.connect(host, port, password, path);

				resizewindow();
				window.setInterval(resizewindow, 1000);

			};



			// button controls
      var serverid = "<%= params[:id] %>";


			$('#reconnect').click(function() {
				document.location.reload(true);
			});

			$('#threefingersalute').click(function() {
				if(confirm("Are you sure you want to send CTRL + ALT + DELETE?")) {
		            rfb.sendCtrlAltDel();
				}
			});

      $('#zone-start').click(function() {
      if(confirm('Are you sure you want to start your server?')) {
    	$.get('/vm/'+serverid+'/start')
    		.done(function() {
    	});
    	}
    });

			$('#zone-reset').click(function() {
				if(confirm('Are you sure you want to reboot your server?')) {
				$.get('/vm/'+serverid+'/restart')
					.done(function() {
				});
				}
							});

              $('#zone-poweroff').click(function() {
              if(confirm('Are you sure you want to stop your server?')) {
            	$.get('/vm/'+serverid+'/stop')
            		.done(function() {
            	});
            	}
            });
					</script>
